<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

<!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 配置会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!-- 加载mybatis的配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--
        mapper批量扫描，从mapper包中扫描mapper接口，自动创建mapper代理对象 并且在spring中注册
        自动扫描出来的mapper的bean的id为 mapper类名（首字母小写）
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!---
                扫描指定包下的所有的mapper接口 和 映射文件
                遵循一些规范：mapper接口名 和 映射文件.xml的名称保持一致，且在同一个目录
                上面规范前提是：使用的是mapper代理方法
        -->
        <!-- 如果扫描多个包，每个包中间使用半角逗号分隔 -->
        <property name="basePackage" value="eud.zhku.mapper"></property>

        <!-- 注意这样做是会有问题的，因为这优先级比加载db.propertie配置文件高 -->
        <!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"></property> -->

        <!-- value ： 引用上面已经定义的sqlSessionFactory bean对象 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>


</beans>